{"version":3,"sources":["transformers.js"],"names":["getConcater","parser","emitError","objectMode","bufs","TypeError","chunk","enc","cb","push","Buffer","concat","toString","length","getErrorTransformer","response","statusCode","code","message","headerInfo","amzRequestid","headersSent","getHeader","amzId2","amzBucketRegion","xmlString","getError","e","errors","S3Error","_","each","value","key","xmlParsers","parseError","ex","getHashSummer","enableSHA256","md5","Crypto","createHash","sha256","Through2","obj","update","md5sum","sha256sum","digest","hashData","getCopyObjectTransformer","parseCopyObject","getListBucketTransformer","parseListBucket","getListMultipartTransformer","parseListMultipart","getListPartsTransformer","parseListParts","getInitiateMultipartTransformer","parseInitiateMultipart","getListObjectsTransformer","parseListObjects","getListObjectsV2Transformer","parseListObjectsV2","getListObjectsV2WithMetadataTransformer","parseListObjectsV2WithMetadata","getCompleteMultipartTransformer","parseCompleteMultipart","getBucketRegionTransformer","parseBucketRegion","getBucketNotificationTransformer","parseBucketNotification","getNotificationTransformer","JSONParser","bucketVersioningTransformer","parseBucketVersioningConfig","getTagsTransformer","parseTagging","lifecycleTransformer","parseLifecycleConfig","objectLockTransformer","parseObjectLockConfig","objectRetentionTransformer","parseObjectRetentionConfig","bucketEncryptionTransformer","parseBucketEncryptionConfig","replicationConfigTransformer","parseReplicationConfig","objectLegalHoldTransformer","parseObjectLegalHoldConfig"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;AAvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACO,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,SAA7B,EAAwC;AAC7C,MAAIC,UAAU,GAAG,KAAjB;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEA,MAAIH,MAAM,IAAI,CAAC,yBAAWA,MAAX,CAAf,EAAmC;AACjC,UAAM,IAAII,SAAJ,CAAc,qCAAd,CAAN;AACD;;AAED,MAAIJ,MAAJ,EAAY;AACVE,IAAAA,UAAU,GAAG,IAAb;AACD;;AAED,SAAO,sBAAS;AAACA,IAAAA;AAAD,GAAT,EACS,UAAUG,KAAV,EAAiBC,GAAjB,EAAsBC,EAAtB,EAA0B;AACxBJ,IAAAA,IAAI,CAACK,IAAL,CAAUH,KAAV;AACAE,IAAAA,EAAE;AACH,GAJV,EAIY,UAAUA,EAAV,EAAc;AACf,QAAIN,SAAJ,EAAe;AACbM,MAAAA,EAAE,CAACP,MAAM,CAACS,MAAM,CAACC,MAAP,CAAcP,IAAd,EAAoBQ,QAApB,EAAD,CAAP,CAAF,CADa,CAEb;;AACA,WAAKH,IAAL,CAAU,IAAV;AACA;AACD;;AACD,QAAIL,IAAI,CAACS,MAAT,EAAiB;AACf,UAAIZ,MAAJ,EAAY;AACV,aAAKQ,IAAL,CAAUR,MAAM,CAACS,MAAM,CAACC,MAAP,CAAcP,IAAd,EAAoBQ,QAApB,EAAD,CAAhB;AACD,OAFD,MAEO;AACL,aAAKH,IAAL,CAAUC,MAAM,CAACC,MAAP,CAAcP,IAAd,CAAV;AACD;AACF;;AACDI,IAAAA,EAAE;AACH,GAnBV,CAAP;AAoBD,C,CAED;;;AACO,SAASM,mBAAT,CAA6BC,QAA7B,EAAuC;AAC5C,MAAIC,UAAU,GAAGD,QAAQ,CAACC,UAA1B;AACA,MAAIC,IAAJ,EAAUC,OAAV;;AACA,MAAIF,UAAU,KAAK,GAAnB,EAAwB;AACtBC,IAAAA,IAAI,GAAG,kBAAP;AACAC,IAAAA,OAAO,GAAG,mBAAV;AACD,GAHD,MAGO,IAAIF,UAAU,KAAK,GAAnB,EAAwB;AAC7BC,IAAAA,IAAI,GAAG,mBAAP;AACAC,IAAAA,OAAO,GAAG,yCAAV;AACD,GAHM,MAGA,IAAIF,UAAU,KAAK,GAAnB,EAAwB;AAC7BC,IAAAA,IAAI,GAAG,cAAP;AACAC,IAAAA,OAAO,GAAG,2CAAV;AACD,GAHM,MAGA,IAAIF,UAAU,KAAK,GAAnB,EAAwB;AAC7BC,IAAAA,IAAI,GAAG,UAAP;AACAC,IAAAA,OAAO,GAAG,WAAV;AACD,GAHM,MAGA,IAAIF,UAAU,KAAK,GAAnB,EAAwB;AAC7BC,IAAAA,IAAI,GAAG,kBAAP;AACAC,IAAAA,OAAO,GAAG,oBAAV;AACD,GAHM,MAGA,IAAIF,UAAU,KAAK,GAAnB,EAAwB;AAC7BC,IAAAA,IAAI,GAAG,kBAAP;AACAC,IAAAA,OAAO,GAAG,oBAAV;AACD,GAHM,MAGA;AACLD,IAAAA,IAAI,GAAG,cAAP;AACAC,IAAAA,OAAO,GAAI,GAAEF,UAAW,EAAxB;AACD;;AAED,MAAIG,UAAU,GAAG,EAAjB,CA1B4C,CA2B5C;AACA;;AACAA,EAAAA,UAAU,CAACC,YAAX,GAA0BL,QAAQ,CAACM,WAAT,GAAuBN,QAAQ,CAACO,SAAT,CAAmB,kBAAnB,CAAvB,GAAgE,IAA1F,CA7B4C,CA8B5C;;AACAH,EAAAA,UAAU,CAACI,MAAX,GAAoBR,QAAQ,CAACM,WAAT,GAAuBN,QAAQ,CAACO,SAAT,CAAmB,YAAnB,CAAvB,GAA0D,IAA9E,CA/B4C,CAgC5C;AACA;;AACAH,EAAAA,UAAU,CAACK,eAAX,GAA6BT,QAAQ,CAACM,WAAT,GAAuBN,QAAQ,CAACO,SAAT,CAAmB,qBAAnB,CAAvB,GAAmE,IAAhG;AAEA,SAAOtB,WAAW,CAAC,UAAAyB,SAAS,EAAI;AAC9B,QAAIC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB;AACA,UAAIC,CAAC,GAAG,IAAIC,MAAM,CAACC,OAAX,CAAmBX,OAAnB,CAAR,CAFmB,CAGnB;;AACAS,MAAAA,CAAC,CAACV,IAAF,GAASA,IAAT;;AACAa,MAAAA,CAAC,CAACC,IAAF,CAAOZ,UAAP,EAAmB,UAACa,KAAD,EAAQC,GAAR,EAAgB;AACjCN,QAAAA,CAAC,CAACM,GAAD,CAAD,GAASD,KAAT;AACD,OAFD;;AAGA,aAAOL,CAAP;AACD,KATD;;AAUA,QAAI,CAACF,SAAL,EAAgB;AACd,aAAOC,QAAQ,EAAf;AACD;;AACD,QAAIC,CAAJ;;AACA,QAAI;AACFA,MAAAA,CAAC,GAAGO,UAAU,CAACC,UAAX,CAAsBV,SAAtB,EAAiCN,UAAjC,CAAJ;AACD,KAFD,CAEE,OAAOiB,EAAP,EAAW;AACX,aAAOV,QAAQ,EAAf;AACD;;AACD,WAAOC,CAAP;AACD,GArBiB,EAqBf,IArBe,CAAlB;AAsBD,C,CAED;;;AACO,SAASU,aAAT,CAAuBC,YAAvB,EAAqC;AAC1C,MAAIC,GAAG,GAAGC,gBAAOC,UAAP,CAAkB,KAAlB,CAAV;;AACA,MAAIC,MAAM,GAAGF,gBAAOC,UAAP,CAAkB,QAAlB,CAAb;;AAEA,SAAOE,iBAASC,GAAT,CAAa,UAAStC,KAAT,EAAgBC,GAAhB,EAAqBC,EAArB,EAAyB;AAE3C,QAAI8B,YAAJ,EAAkB;AAChBI,MAAAA,MAAM,CAACG,MAAP,CAAcvC,KAAd;AACD,KAFD,MAEO;AACLiC,MAAAA,GAAG,CAACM,MAAJ,CAAWvC,KAAX;AACD;;AACDE,IAAAA,EAAE;AACH,GARM,EAQJ,UAASA,EAAT,EAAa;AACd,QAAIsC,MAAM,GAAG,EAAb;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIT,YAAJ,EAAkB;AAChBS,MAAAA,SAAS,GAAGL,MAAM,CAACM,MAAP,CAAc,KAAd,CAAZ;AACD,KAFD,MAEO;AACLF,MAAAA,MAAM,GAAGP,GAAG,CAACS,MAAJ,CAAW,QAAX,CAAT;AACD;;AACD,QAAIC,QAAQ,GAAG;AAACH,MAAAA,MAAD;AAASC,MAAAA;AAAT,KAAf;AACA,SAAKtC,IAAL,CAAUwC,QAAV;AACA,SAAKxC,IAAL,CAAU,IAAV;AACAD,IAAAA,EAAE;AACH,GApBM,CAAP;AAqBD,C,CAED;AACA;AAEA;;;AACO,SAAS0C,wBAAT,GAAoC;AACzC,SAAOlD,WAAW,CAACkC,UAAU,CAACiB,eAAZ,CAAlB;AACD,C,CAED;;;AACO,SAASC,wBAAT,GAAoC;AACzC,SAAOpD,WAAW,CAACkC,UAAU,CAACmB,eAAZ,CAAlB;AACD,C,CAED;;;AACO,SAASC,2BAAT,GAAuC;AAC5C,SAAOtD,WAAW,CAACkC,UAAU,CAACqB,kBAAZ,CAAlB;AACD,C,CAED;;;AACO,SAASC,uBAAT,GAAmC;AACxC,SAAOxD,WAAW,CAACkC,UAAU,CAACuB,cAAZ,CAAlB;AACD,C,CAED;;;AACO,SAASC,+BAAT,GAA2C;AAChD,SAAO1D,WAAW,CAACkC,UAAU,CAACyB,sBAAZ,CAAlB;AACD,C,CAED;;;AACO,SAASC,yBAAT,GAAqC;AAC1C,SAAO5D,WAAW,CAACkC,UAAU,CAAC2B,gBAAZ,CAAlB;AACD,C,CAED;;;AACO,SAASC,2BAAT,GAAuC;AAC5C,SAAO9D,WAAW,CAACkC,UAAU,CAAC6B,kBAAZ,CAAlB;AACD,C,CAED;;;AACO,SAASC,uCAAT,GAAmD;AACxD,SAAOhE,WAAW,CAACkC,UAAU,CAAC+B,8BAAZ,CAAlB;AACD,C,CAED;;;AACO,SAASC,+BAAT,GAA2C;AAChD,SAAOlE,WAAW,CAACkC,UAAU,CAACiC,sBAAZ,CAAlB;AACD,C,CAED;;;AACO,SAASC,0BAAT,GAAsC;AAC3C,SAAOpE,WAAW,CAACkC,UAAU,CAACmC,iBAAZ,CAAlB;AACD,C,CAED;;;AACO,SAASC,gCAAT,GAA4C;AACjD,SAAOtE,WAAW,CAACkC,UAAU,CAACqC,uBAAZ,CAAlB;AACD,C,CAED;;;AACO,SAASC,0BAAT,GAAsC;AAC3C;AACA,SAAO,IAAIC,mBAAJ,EAAP;AACD;;AAEM,SAAUC,2BAAV,GAAuC;AAC5C,SAAO1E,WAAW,CAACkC,UAAU,CAACyC,2BAAZ,CAAlB;AACD;;AAEM,SAASC,kBAAT,GAA8B;AACnC,SAAO5E,WAAW,CAAEkC,UAAU,CAAC2C,YAAb,CAAlB;AACD;;AAEM,SAAUC,oBAAV,GAAgC;AACrC,SAAO9E,WAAW,CAACkC,UAAU,CAAC6C,oBAAZ,CAAlB;AACD;;AAGM,SAAUC,qBAAV,GAAiC;AACtC,SAAOhF,WAAW,CAACkC,UAAU,CAAC+C,qBAAZ,CAAlB;AACD;;AAEM,SAAUC,0BAAV,GAAsC;AAC3C,SAAOlF,WAAW,CAACkC,UAAU,CAACiD,0BAAZ,CAAlB;AACD;;AACM,SAAUC,2BAAV,GAAuC;AAC5C,SAAOpF,WAAW,CAACkC,UAAU,CAACmD,2BAAZ,CAAlB;AACD;;AAEM,SAAUC,4BAAV,GAAwC;AAC7C,SAAOtF,WAAW,CAACkC,UAAU,CAACqD,sBAAZ,CAAlB;AACD;;AAEM,SAAUC,0BAAV,GAAsC;AAC3C,SAAOxF,WAAW,CAACkC,UAAU,CAACuD,0BAAZ,CAAlB;AACD","sourcesContent":["/*\n * MinIO Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015, 2016 MinIO, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as xmlParsers from './xml-parsers.js'\nimport * as _ from 'lodash'\nimport Through2 from 'through2'\nimport Crypto from 'crypto'\nimport JSONParser from 'json-stream'\n\nimport { isFunction } from './helpers.js'\nimport * as errors from './errors.js'\n\n// getConcater returns a stream that concatenates the input and emits\n// the concatenated output when 'end' has reached. If an optional\n// parser function is passed upon reaching the 'end' of the stream,\n// `parser(concatenated_data)` will be emitted.\nexport function getConcater(parser, emitError) {\n  var objectMode = false\n  var bufs = []\n\n  if (parser && !isFunction(parser)) {\n    throw new TypeError('parser should be of type \"function\"')\n  }\n\n  if (parser) {\n    objectMode = true\n  }\n\n  return Through2({objectMode},\n                  function (chunk, enc, cb) {\n                    bufs.push(chunk)\n                    cb()\n                  }, function (cb) {\n                    if (emitError) {\n                      cb(parser(Buffer.concat(bufs).toString()))\n                      // cb(e) would mean we have to emit 'end' by explicitly calling this.push(null)\n                      this.push(null)\n                      return\n                    }\n                    if (bufs.length) {\n                      if (parser) {\n                        this.push(parser(Buffer.concat(bufs).toString()))\n                      } else {\n                        this.push(Buffer.concat(bufs))\n                      }\n                    }\n                    cb()\n                  })\n}\n\n// Generates an Error object depending on http statusCode and XML body\nexport function getErrorTransformer(response) {\n  var statusCode = response.statusCode\n  var code, message\n  if (statusCode === 301) {\n    code = 'MovedPermanently'\n    message = 'Moved Permanently'\n  } else if (statusCode === 307) {\n    code = 'TemporaryRedirect'\n    message = 'Are you using the correct endpoint URL?'\n  } else if (statusCode === 403) {\n    code = 'AccessDenied'\n    message = 'Valid and authorized credentials required'\n  } else if (statusCode === 404) {\n    code = 'NotFound'\n    message = 'Not Found'\n  } else if (statusCode === 405) {\n    code = 'MethodNotAllowed'\n    message = 'Method Not Allowed'\n  } else if (statusCode === 501) {\n    code = 'MethodNotAllowed'\n    message = 'Method Not Allowed'\n  } else {\n    code = 'UnknownError'\n    message = `${statusCode}`\n  }\n\n  var headerInfo = {}\n  // A value created by S3 compatible server that uniquely identifies\n  // the request.\n  headerInfo.amzRequestid = response.headersSent ? response.getHeader('x-amz-request-id') : null\n  // A special token that helps troubleshoot API replies and issues.\n  headerInfo.amzId2 = response.headersSent ? response.getHeader('x-amz-id-2') : null\n  // Region where the bucket is located. This header is returned only\n  // in HEAD bucket and ListObjects response.\n  headerInfo.amzBucketRegion = response.headersSent ? response.getHeader('x-amz-bucket-region') : null\n\n  return getConcater(xmlString => {\n    let getError = () => {\n      // Message should be instantiated for each S3Errors.\n      var e = new errors.S3Error(message)\n      // S3 Error code.\n      e.code = code\n      _.each(headerInfo, (value, key) => {\n        e[key] = value\n      })\n      return e\n    }\n    if (!xmlString) {\n      return getError()\n    }\n    let e\n    try {\n      e = xmlParsers.parseError(xmlString, headerInfo)\n    } catch (ex) {\n      return getError()\n    }\n    return e\n  }, true)\n}\n\n// A through stream that calculates md5sum and sha256sum\nexport function getHashSummer(enableSHA256) {\n  var md5 = Crypto.createHash('md5')\n  var sha256 = Crypto.createHash('sha256')\n\n  return Through2.obj(function(chunk, enc, cb) {\n    \n    if (enableSHA256) {\n      sha256.update(chunk)\n    } else {\n      md5.update(chunk)\n    }\n    cb()\n  }, function(cb) {\n    var md5sum = ''\n    var sha256sum = ''\n    if (enableSHA256) {\n      sha256sum = sha256.digest('hex')\n    } else {\n      md5sum = md5.digest('base64')\n    }\n    var hashData = {md5sum, sha256sum}\n    this.push(hashData)\n    this.push(null)\n    cb()\n  })\n}\n\n// Following functions return a stream object that parses XML\n// and emits suitable Javascript objects.\n\n// Parses CopyObject response.\nexport function getCopyObjectTransformer() {\n  return getConcater(xmlParsers.parseCopyObject)\n}\n\n// Parses listBuckets response.\nexport function getListBucketTransformer() {\n  return getConcater(xmlParsers.parseListBucket)\n}\n\n// Parses listMultipartUploads response.\nexport function getListMultipartTransformer() {\n  return getConcater(xmlParsers.parseListMultipart)\n}\n\n// Parses listParts response.\nexport function getListPartsTransformer() {\n  return getConcater(xmlParsers.parseListParts)\n}\n\n// Parses initMultipartUpload response.\nexport function getInitiateMultipartTransformer() {\n  return getConcater(xmlParsers.parseInitiateMultipart)\n}\n\n// Parses listObjects response.\nexport function getListObjectsTransformer() {\n  return getConcater(xmlParsers.parseListObjects)\n}\n\n// Parses listObjects response.\nexport function getListObjectsV2Transformer() {\n  return getConcater(xmlParsers.parseListObjectsV2)\n}\n\n// Parses listObjects with metadata response.\nexport function getListObjectsV2WithMetadataTransformer() {\n  return getConcater(xmlParsers.parseListObjectsV2WithMetadata)\n}\n\n// Parses completeMultipartUpload response.\nexport function getCompleteMultipartTransformer() {\n  return getConcater(xmlParsers.parseCompleteMultipart)\n}\n\n// Parses getBucketLocation response.\nexport function getBucketRegionTransformer() {\n  return getConcater(xmlParsers.parseBucketRegion)\n}\n\n// Parses GET/SET BucketNotification response\nexport function getBucketNotificationTransformer() {\n  return getConcater(xmlParsers.parseBucketNotification)\n}\n\n// Parses a notification.\nexport function getNotificationTransformer() {\n  // This will parse and return each object.\n  return new JSONParser()\n}\n\nexport function  bucketVersioningTransformer(){\n  return getConcater(xmlParsers.parseBucketVersioningConfig)\n}\n\nexport function getTagsTransformer() {\n  return getConcater( xmlParsers.parseTagging)\n}\n\nexport function  lifecycleTransformer(){\n  return getConcater(xmlParsers.parseLifecycleConfig)\n}\n\n\nexport function  objectLockTransformer(){\n  return getConcater(xmlParsers.parseObjectLockConfig)\n}\n\nexport function  objectRetentionTransformer(){\n  return getConcater(xmlParsers.parseObjectRetentionConfig)\n}\nexport function  bucketEncryptionTransformer(){\n  return getConcater(xmlParsers.parseBucketEncryptionConfig)\n}\n\nexport function  replicationConfigTransformer(){\n  return getConcater(xmlParsers.parseReplicationConfig)\n}\n\nexport function  objectLegalHoldTransformer(){\n  return getConcater(xmlParsers.parseObjectLegalHoldConfig)\n}"],"file":"transformers.js"}